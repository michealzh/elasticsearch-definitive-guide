[[routing-value]]
=== 路由文档到分片

当你索引一个文件时, 它被存储在一个单独的主分片.((("shards", "routing a document to")))((("documents", "routing a document to a shard")))((("routing a document to a shard"))) Elasticsearch是如何知道文档是属于哪一个分区的呢?  当创建一个新的文档, 它是如何知道文档是应该放在分区1还是分区2?

处理不能是随机的,因为以后需要检索文档.实际上,它由一个简单的公式决定:

    shard = hash(routing) % number_of_primary_shards

The `routing` value is an arbitrary string, which defaults to the document's
`_id` but can also be set to a custom value. This `routing` string is passed
through a hashing function to generate a number, which is divided by the
number of primary shards in the index to return the _remainder_. The remainder
will always be in the range `0` to `number_of_primary_shards - 1`, and gives
us the number of the shard where a particular document lives.

This explains why the number of primary shards((("primary shards", "fixed number of, routing and"))) can be set only when an index
is created and never changed:  if the number of primary shards ever changed in
the future, all previous routing values would be invalid and documents would
never be found.

[NOTE]
====
Users sometimes think that having a fixed number of primary shards makes it
difficult to scale out an index later.  In reality, there are techniques
that make it easy to scale out as and when you need. We talk more about these
in <<scale>>.
====

All document APIs (`get`, `index`, `delete`, `bulk`, `update`, and `mget`)
accept a `routing` parameter ((("routing parameter")))that can be used to customize the document-to-
shard mapping. A custom routing value could be used to ensure that all related
documents--for instance, all the documents belonging to the same user--are
stored on the same shard. We discuss in detail why you may want to do this in
<<scale>>.
